@startuml

title A simple class diagram


class MainLoopExample [[java:MainLoopExample]] {
	+{static}void main(String[] args)
}

class CircularBuffer [[java:my_package.CircularBuffer]] {
	-int capacity
	-int[] buffer
	-int offset
	-int pushs
	-{static}int instances
	+CircularBuffer(int size)
	+CircularBuffer()
	+int capacity()
	+int size()
	+{static}int instances()
	+void push(int[] elts)
	+void push(int elt)
	+String toString()
}

class CircularBufferTest [[java:my_package.CircularBufferTest]] {
	~{static}void setUpBeforeClass()
	~{static}void tearDownAfterClass()
	~void setUp()
	~void tearDown()
	~void testCircularBuffer()
	~void testCapacity()
	~void testPush()
	~void testInstances()
}

' Inheritance
CircularBuffer <|-- RectangularBuffer : Generalization\nis a\nor inherits from

' others relations
CircularBuffer <.. CircularBufferTest : Dependency\ntests

Car "1" *-- "4" Wheel : composition\nhas

A --> C : contains\nevery instance of A\nhas a B
A --o D : Aggregation\nA contains a\nreference to D\nbut D may be shared

newpage

title simple Reationship

Interface MotorVehicle {
}

class Car
Car ..|> MotorVehicle : Realization\nimplements

Driver - Car : drives >

'composition
Car "1" *- "4" Wheel : have >

Car -- Person : < owns


@enduml